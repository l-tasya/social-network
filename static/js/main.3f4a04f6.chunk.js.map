{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Dialogs/Dialogs.module.scss","components/Profile/UserInfo/UserInfo.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Users/User/User.module.scss","components/common/PostTextArea/PostTextArea.module.scss","components/News/Stories/Story/Story.module.scss","components/Header/Header.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/News/Stories/Stories.module.scss","components/Profile/Profile.module.scss","components/Profile/Statistics/Statistics.module.scss","components/News/News.module.scss","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/Profile/Statistics/Statistics.tsx","components/Profile/UserInfo/UserInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/common/PostTextArea/PostTextArea.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/News/Stories/Story/Story.tsx","components/News/Stories/StoriesContainer.tsx","components/News/Stories/Stories.tsx","components/News/News.tsx","redux/state.ts","redux/feed-reducer.ts","components/News/NewsContainer.tsx","components/Users/User/User.tsx","img/JOJO.png","redux/user-reducer.ts","components/Users/UsersContainer.ts","components/Users/Users.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","props","className","s","header","header__logo","src","alt","header__title","title","Navbar","wrapper","nav","activeClassName","active","nav__button","to","Music","Statistics","statistics","UserInfo","userInfo","userInfo__img","style","background","userInfo__info","userInfo__about","userInfo__ava","state","imageSRC","userInfo__title","name","surname","userInfo__subtitle","eMail","userInfo__buttons","buttons","buttons__friendAdd","buttons__chat","size","buttons__other","firstSrc","secondSrc","initialState","post","id","message","newPostText","profileReducer","action","type","newPost","length","push","text","Post","useState","like","setLike","post__title","img","post__img","post__name","post__time","post__text","footer","color","onClick","footer__like","PostTextArea","error","setError","onAddPostButtonClick","value","trim","addItem","textAreaStyles","border","postADD","postADD__sendButton","postADD__inputArea","postADD__spanERROR","user","textarea","onChange","e","onChangeText","currentTarget","onKeyPress","key","shiftKey","preventDefault","placeholder","cols","rows","onBlur","MyPosts","addPost","onPostChange","postElements","map","t","reverse","myPosts","myPosts__posts","MyPostsContainer","connect","profilePage","dispatch","profileInputChangeAC","addPostAC","Profile","content","store","getState","Settings","dialogs","messages","sent","newMessageText","dialogsReducer","newMessage","Message","senDED","DialogsItem","onDialogItemClick","Dialogs","dialogElements","dialogItems","messageElements","dialogMessages","dialogs__items","dialogIcon","dialogs__messages","dialogs__typing","errorInput","dialogs__input","onInputChange","onEnterKeyPress","dialogs__send","onSentButtonClick","DialogsContainer","dialogsPage","Story","story","storyStyles","user__image","user__name","StoriesContainer","feedStories","newsPage","body","stories","f","News","feed","feedNewPostText","onItemAddClick","feedPost","_state","feedPosts","this","_callbackSubscriber","console","log","subscribe","observer","feedReducer","newFeedPost","NewsContainer","addFeedPostAC","feedInputChangeAC","User","something","followed","stylesForFollowButton","minWidth","padding","maxHeight","borderRadius","fontWeight","fontFamily","fontSize","users","users__first","userIMG","users__img","toggleFollow","userID","users__name","userName","users__location","country","city","users__status","userStatus","status","fullName","UsersContainer","usersPage","toggleFollowAC","u","App","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","curr","find","createStore","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f4a04f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav__button\":\"Navbar_nav__button__3MpAs\",\"wrapper\":\"Navbar_wrapper__1lrPC\",\"nav\":\"Navbar_nav__1KVb6\",\"nav__img\":\"Navbar_nav__img__24tcx\",\"active\":\"Navbar_active__3EB6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1dBP5\",\"dialogs__items\":\"Dialogs_dialogs__items__jOlgl\",\"active\":\"Dialogs_active__FZ6Up\",\"dialogs__messages\":\"Dialogs_dialogs__messages__kMWDR\",\"message\":\"Dialogs_message__VTYvh\",\"senDED\":\"Dialogs_senDED__1kqdo\",\"dialogs__input\":\"Dialogs_dialogs__input__3NOt1\",\"errorInput\":\"Dialogs_errorInput__1nyn6\",\"dialogs__send\":\"Dialogs_dialogs__send__iSgQK\",\"dialogs__typing\":\"Dialogs_dialogs__typing__x-eK-\",\"dialogIcon\":\"Dialogs_dialogIcon__2Mjh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"UserInfo_userInfo__3WllZ\",\"userInfo__img\":\"UserInfo_userInfo__img__1Z6h8\",\"userInfo__about\":\"UserInfo_userInfo__about__3ToiD\",\"userInfo__info\":\"UserInfo_userInfo__info__1byRe\",\"userInfo__ava\":\"UserInfo_userInfo__ava__3zjeK\",\"userInfo__title\":\"UserInfo_userInfo__title__23Rds\",\"userInfo__subtitle\":\"UserInfo_userInfo__subtitle__ohry9\",\"userInfo__buttons\":\"UserInfo_userInfo__buttons__d9iZk\",\"buttons\":\"UserInfo_buttons__fvVWj\",\"buttons__friendAdd\":\"UserInfo_buttons__friendAdd__1NthV\",\"buttons__chat\":\"UserInfo_buttons__chat__2Qq9i\",\"buttons__other\":\"UserInfo_buttons__other__7oolp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1eAfH\",\"post__img\":\"Post_post__img__iMRn3\",\"post__title\":\"Post_post__title__1QEjq\",\"post__buttons\":\"Post_post__buttons__1cJRs\",\"post__name\":\"Post_post__name__3ZI1a\",\"post__time\":\"Post_post__time__1_Tbo\",\"post__text\":\"Post_post__text__1Iu7c\",\"footer\":\"Post_footer__1G8ri\",\"footer__like\":\"Post_footer__like__3rIPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"User_users__4xep0\",\"users__img\":\"User_users__img__3h-cj\",\"users__name\":\"User_users__name__1o67I\",\"users__location\":\"User_users__location__1418K\",\"users__status\":\"User_users__status__1g-E3\",\"users__first\":\"User_users__first__jwpYH\",\"add-friend\":\"User_add-friend__guH96\",\"remove-friend\":\"User_remove-friend__6vtMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postADD\":\"PostTextArea_postADD__vu13b\",\"postADD__sendButton\":\"PostTextArea_postADD__sendButton__rf-jf\",\"postADD__inputArea\":\"PostTextArea_postADD__inputArea__LtpGd\",\"postADD__spanERROR\":\"PostTextArea_postADD__spanERROR__qXpek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"story\":\"Story_story__1_9fY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1yj3X\",\"header__logo\":\"Header_header__logo__3F0tN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1xkaD\",\"addPost\":\"MyPosts_addPost__21Y59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stories\":\"Stories_stories__3Hyml\",\"body\":\"Stories_body__35rZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2-vFf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1JjQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"News_feed__1HcZ9\"};","import React from 'react';\r\nimport s from './Header.module.scss';\r\ntype HeaderPropsType = {\r\n    title: string\r\n}\r\nexport const Header: React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.header__logo}>\r\n                <img src=\"https://www.renaultgroup.com/wp-content/uploads/2021/03/nouveau_logo_renault_banner.jpg\"\r\n                     alt=''/>\r\n                <span>temp logo</span>\r\n            </div>\r\n            <div className={s.header__title}>\r\n                {props.title}\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.scss';\r\nimport {AlignLeft, MessageSquare, Music, Settings, User, Users} from 'react-feather';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/profile'>\r\n                    <User/>\r\n                    <span>Profile</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/users'>\r\n                    <Users/>\r\n                    <span>Users</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/dialogs'>\r\n                    <MessageSquare/>\r\n                    <span>Dialogs</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/feed'>\r\n                    <AlignLeft/>\r\n                    <span>News</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/audio'>\r\n                    <Music/>\r\n                    <span>Music</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/settings'>\r\n                    <Settings/>\r\n                    <span>Settings</span>\r\n                </NavLink>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar;","import React from \"react\";\r\n// import s from './Music.module.scss';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music\r\n\r\n","import React from \"react\";\r\nimport s from './Statistics.module.scss'\r\n\r\nconst Statistics: React.FC = (props) =>{\r\n    return <div>\r\n        <div className={s.statistics}>hi i am statistic</div>\r\n    </div>\r\n}\r\nexport default Statistics","import React from 'react';\r\nimport {Mail, MoreHorizontal} from 'react-feather';\r\nimport { UserInfoType } from '../../../redux/profile-reducer';\r\nimport s from './UserInfo.module.scss'\r\n\r\n\r\ntype UserInfoPropsType = {\r\n    state: UserInfoType\r\n}\r\n\r\n\r\nconst UserInfo: React.FC<UserInfoPropsType> = (props) => {\r\n    let backgroundImageStyle = {\r\n        background: 'red'\r\n    }\r\n    return (\r\n        <div className={s.userInfo}>\r\n            <div className={s.userInfo__img} style={backgroundImageStyle}>\r\n                <div>\r\n                    background image\r\n                </div>\r\n            </div>\r\n            <div className={s.userInfo__info}>\r\n                <span className={s.userInfo__about}>\r\n                    <img className={s.userInfo__ava} src={props.state.imageSRC} alt=''/>\r\n                    <div>\r\n                        <div className={s.userInfo__title}>{props.state.name} {props.state.surname}</div>\r\n                        <div className={s.userInfo__subtitle}>{props.state.eMail}</div>\r\n                    </div>\r\n                </span>\r\n                <div className={`${s.userInfo__buttons} ${s.buttons}`}>\r\n                    <button className={s.buttons__friendAdd}>ADD FRIEND</button>\r\n                    <button className={s.buttons__chat}><Mail size={20}/></button>\r\n                    <button className={s.buttons__other}><MoreHorizontal size={20}/></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserInfo;","import {ActionsType} from './redux-store';\r\n\r\nexport let firstSrc = 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false';\r\nexport let secondSrc = 'https://static.turbosquid.com/Preview/001325/881/YD/_600.jpg';\r\n\r\nexport type UserInfoType = {\r\n    imageSRC: string\r\n    name: string\r\n    surname: string\r\n    eMail: string\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    src: string\r\n    message: string\r\n}\r\nexport type PostsType = Array<PostType>\r\n\r\n\r\nexport type ProfilePageType = {\r\n    userInfo: UserInfoType\r\n    post: PostsType\r\n    newPostText: string\r\n}\r\n\r\nlet initialState: ProfilePageType = {\r\n    userInfo: {\r\n        imageSRC: 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n        name: 'Temirtas',\r\n        surname: 'Nursain',\r\n        eMail: 'dalionfull@gmail.com'\r\n    },\r\n    post: [\r\n        {id: 1, src: secondSrc, message: 'That is my wall?'},\r\n\r\n    ],\r\n    newPostText: '',\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action:ActionsType): ProfilePageType =>{\r\n    if (action.type === 'ADD-POST') {\r\n        let newPost: PostType = {\r\n            id: state.post[state.post.length - 1].id + 1,\r\n            src: action.src === 1 ? firstSrc : secondSrc,\r\n            message: state.newPostText,\r\n        }\r\n        state.post.push(newPost)\r\n        state.newPostText = ''\r\n    }\r\n    if (action.type === 'PROFILE-INPUT-CHANGE') {\r\n        state.newPostText = `${action.text}`\r\n    }\r\n    return {...state}\r\n}/*----AC----*/\r\nexport const addPostAC = (src: 1 | 2) => {\r\n    return {\r\n        type: 'ADD-POST',\r\n        src: src\r\n    } as const\r\n}\r\nexport const profileInputChangeAC = (text: string) => {\r\n    return {\r\n        type: 'PROFILE-INPUT-CHANGE',\r\n        text: text,\r\n    } as const\r\n}","import React, { useState } from \"react\";\r\nimport s from './Post.module.scss'\r\nimport {Heart} from 'react-feather';\r\n\r\ntype PropsType = {\r\n    message: string,\r\n    img: string\r\n    id: number\r\n}\r\nconst Post: React.FC<PropsType> = (props) => {\r\n    let [like, setLike] = useState<boolean>(false)\r\n    const onLikeButtonClick = () =>{\r\n        setLike(!like)\r\n    }\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.post__title}>\r\n                <img src={props.img} alt=\"\" className={s.post__img}/>\r\n                <div>\r\n                    <div className={s.post__name}>Name Surname</div>\r\n                    <div className={s.post__time}>4 hour ago</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.post__text}>\r\n                <div>{props.message}</div>\r\n            </div>\r\n            <div className={s.footer}><Heart color={like?'red':'black'} onClick={onLikeButtonClick}  size={20} className={s.footer__like}/></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './PostTextArea.module.scss'\r\nimport {Plus} from 'react-feather';\r\nimport { UserInfoType } from '../../../redux/profile-reducer';\r\n\r\n\r\ntype PostTextAreaPropsType = {\r\n    value: string\r\n    addItem: ()=>void\r\n    onChangeText: (text: string)=>void\r\n    user: UserInfoType\r\n}\r\n\r\nexport const PostTextArea: React.FC<PostTextAreaPropsType> = (props) => {\r\n    let [error, setError] = useState<string | null>();\r\n    let onAddPostButtonClick = () => {\r\n        if (props.value.trim() !== '') {\r\n            props.addItem();\r\n            setError('')\r\n        } else {\r\n            setError('required field')\r\n        }\r\n\r\n\r\n    }\r\n    let onEnterKeyPressHandler = (e: React.KeyboardEvent) => {\r\n\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n        }\r\n        if (e.key === 'Enter') {\r\n            onAddPostButtonClick()\r\n        }\r\n\r\n    }\r\n    const onChangeCallBack = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setError(null)\r\n        props.onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    let textAreaStyles = {\r\n        border: error?'2px solid lightcoral':'2px solid #F1F1F1'\r\n    }\r\n    return (<div className={s.postADD}>\r\n            <button className={s.postADD__sendButton} onClick={onAddPostButtonClick}>\r\n                <Plus/>\r\n                <>Create post</>\r\n            </button>\r\n\r\n            <div className={s.postADD__inputArea}>\r\n                {error && <span className={s.postADD__spanERROR}>{error}</span>}\r\n                <img src={props.user.imageSRC} alt=\"\"/>\r\n                <textarea\r\n                    className={s.textarea}\r\n                    onChange={onChangeCallBack}\r\n                    onKeyPress={onEnterKeyPressHandler}\r\n                    placeholder={'What\\'s on your mind'}\r\n                    cols={30}\r\n                    rows={10}\r\n                    value={props.value}\r\n                    style={textAreaStyles}\r\n                    onBlur={()=>setError(null)}\r\n                >\r\n            </textarea>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\r\nimport s from './MyPosts.module.scss'\r\nimport Post from './Post/Post';\r\nimport {PostTextArea} from '../../common/PostTextArea/PostTextArea';\r\nimport { PostsType, UserInfoType } from '../../../redux/profile-reducer';\r\n\r\n\r\ntype MyPostsPropsType = {\r\n    post: PostsType\r\n    newPostText: string\r\n    userInfo: UserInfoType\r\n    addPost: ()=>void\r\n    onPostChange: (text: string)=>void\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = ({post,newPostText, userInfo, addPost, onPostChange}) => {\r\n    //converting post state to Post component\r\n    let postElements = post.map((t) => <Post key={t.id} id={t.id} message={t.message} img={t.src}\r\n    />).reverse()\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <PostTextArea\r\n                value={newPostText}\r\n                user={userInfo}\r\n                addItem={addPost}\r\n                onChangeText={onPostChange}\r\n            />\r\n            <div className={s.myPosts__posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default MyPosts;","import {addPostAC, PostsType, profileInputChangeAC, UserInfoType} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    userInfo: UserInfoType\r\n    newPostText: string\r\n    post: PostsType\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        userInfo: state.profilePage.userInfo,\r\n        newPostText: state.profilePage.newPostText,\r\n        post: state.profilePage.post\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    onPostChange: (text: string) => void\r\n    addPost: () => void\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onPostChange: (text: string) => {\r\n            dispatch(profileInputChangeAC(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostAC(1))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from './Profile.module.scss';\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport UserInfo from \"./UserInfo/UserInfo\";\r\nimport {ReduxStoreType} from '../../redux/redux-store';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n//types\r\ntype ProfilePropsType = {\r\n    store: ReduxStoreType\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <UserInfo state={props.store.getState().profilePage.userInfo} />\r\n            <Statistics />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\n// import s from './Settings.module.scss';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings\r\n\r\n","import {ActionsType} from './redux-store';\r\n\r\n\r\nexport type DialogType = {\r\n    id: string\r\n    name: string\r\n}\r\nexport type DialogsType = Array<DialogType>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n    sent: boolean\r\n}\r\nexport type MessagesType = Array<MessageType>\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: DialogsType\r\n    messages: MessagesType\r\n    newMessageText: string\r\n    error: null | string\r\n}\r\n\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {id: '@Tasya', name: 'Tasya'},\r\n        {id: '@Alex', name: 'Alex'},\r\n        {id: '@Fox', name: 'Fox'},\r\n        {id: '@Drill', name: 'Drill'},\r\n        {id: '@Genius', name: 'Genius'},\r\n        {id: '@Uncle', name: 'Uncle'},\r\n        {id: '@GQtpe', name: 'GQtpe'},\r\n        {id: '@Alina', name: 'Alina'},\r\n    ],\r\n    messages: [\r\n        {id: 1, sent: true, message: 'Hi!'},\r\n        {id: 2, sent: false, message: 'Hi!'},\r\n        {id: 3, sent: true, message: 'How do you feel'},\r\n        {id: 4, sent: false, message: 'I feel Incredibly good'},\r\n        {id: 5, sent: true, message: 'Ok, bye'},\r\n        {id: 6, sent: false, message: 'Bye'},\r\n    ],\r\n    newMessageText: '',\r\n    error: null,\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: ActionsType):DialogsPageType  =>{\r\n    if (action.type === 'SEND-MESSAGE') {\r\n        if(state.newMessageText.trim() !== ''){\r\n        let newMessage: MessageType = {\r\n            id: state.messages.length !== 0 ? state.messages[state.messages.length - 1].id + 1 : 1,\r\n            sent: true,\r\n            message: state.newMessageText.trim()\r\n        }\r\n        state.error = null\r\n        state.messages.push(newMessage)\r\n        }\r\n        if(state.newMessageText.trim() === ''){\r\n            state.error = 'required field'\r\n        }\r\n        state.newMessageText = ''\r\n\r\n    }\r\n    if (action.type === 'DIALOG-INPUT-CHANGE') {\r\n        state.error = null\r\n        state.newMessageText = `${action.text}`\r\n    }\r\n    if (action.type === 'FAKE-DIALOGS') {\r\n        state.messages = []\r\n    }\r\n    return {...state}\r\n}\r\nexport const sendMessageAC = () => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n    } as const\r\n}\r\nexport const fakeDialogsAC = () => {\r\n    return {\r\n        type: 'FAKE-DIALOGS',\r\n    } as const\r\n}\r\nexport const dialogInputChangeAC = (text: string) => {\r\n    return {\r\n        type: 'DIALOG-INPUT-CHANGE',\r\n        text: text\r\n    } as const\r\n}","import React from \"react\";\r\nimport s from '../Dialogs.module.scss';\r\n\r\ntype MessagePropsType = {\r\n    text: string,\r\n    sent: boolean,\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return <span className={(props.sent?s.senDED:null) + ' ' + s.message}>{props.text}</span>\r\n\r\n}\r\nexport default Message;\r\n\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.scss';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogPropsType = {\r\n    name: string,\r\n    id: string,\r\n    onDialogItemClick: ()=>void\r\n}\r\n\r\nconst DialogsItem = (props: DialogPropsType) => {\r\n    return <NavLink onClick={() => props.onDialogItemClick()} activeClassName={s.active}\r\n                    to={`/social-network/dialogs/${props.id}`}>{props.name}</NavLink>\r\n}\r\n\r\nexport default DialogsItem\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport Message from './Message/Message';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport {ArrowRight, MessageCircle} from 'react-feather';\r\nimport {DialogsType, MessagesType} from '../../redux/dialogs-reducer';\r\n\r\ntype DialogsPropsType = {\r\n    dialogItems: DialogsType\r\n    dialogMessages: MessagesType\r\n    onDialogItemClick: () => void\r\n    newMessageText: string\r\n    error: string | null\r\n    onInputChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onEnterKeyPress: (e: React.KeyboardEvent) => void\r\n    onSentButtonClick: () => void\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    //converting state to component\r\n    let dialogElements = props.dialogItems.map((t) => <DialogsItem onDialogItemClick={props.onDialogItemClick}\r\n                                                                   key={t.id} name={t.name} id={t.id}/>)\r\n    let messageElements = props.dialogMessages.map((t) => <Message sent={t.sent} key={t.id} text={t.message}/>)\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__items}>\r\n                <MessageCircle className={s.dialogIcon}/>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.dialogs__messages}>\r\n                {messageElements}\r\n                <div className={s.dialogs__typing}><input value={props.newMessageText}\r\n                                                          className={(props.error && s.errorInput) + ' ' + s.dialogs__input}\r\n                                                          type=\"text\"\r\n                                                          placeholder={'Start typing..'}\r\n                                                          onChange={props.onInputChange}\r\n                                                          onKeyPress={props.onEnterKeyPress}/><span\r\n                    className={s.dialogs__send}><ArrowRight onClick={props.onSentButtonClick}/></span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {\r\n    dialogInputChangeAC,\r\n    DialogsType,\r\n    fakeDialogsAC,\r\n    MessagesType,\r\n    sendMessageAC\r\n} from '../../redux/dialogs-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    error: null | string\r\n    newMessageText: string\r\n    dialogItems: DialogsType\r\n    dialogMessages: MessagesType\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        error: state.dialogsPage.error,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        dialogItems: state.dialogsPage.dialogs,\r\n        dialogMessages: state.dialogsPage.messages\r\n    }\r\n}\r\ntype MapDispatchPropsType = {\r\n    onSentButtonClick: () => void\r\n    onEnterKeyPress: (e: React.KeyboardEvent) => void\r\n    onInputChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onDialogItemClick: () => void\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onSentButtonClick: () => {\r\n            dispatch(sendMessageAC())\r\n        },\r\n        onEnterKeyPress: (e: React.KeyboardEvent) => {\r\n            e.key === 'Enter' && dispatch(sendMessageAC())\r\n        },\r\n        onInputChange: (e: ChangeEvent<HTMLInputElement>) => {\r\n            dispatch(dialogInputChangeAC(`${e.currentTarget.value}`))\r\n        },\r\n        onDialogItemClick: () => {\r\n            dispatch(fakeDialogsAC())\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n\r\n","import React from 'react'\r\nimport {FeedStoryType} from '../../../../redux/feed-reducer'\r\nimport s from './Story.module.scss'\r\n\r\ntype StoryPropsType = {\r\n    story: FeedStoryType\r\n}\r\n\r\nexport const Story: React.FC<StoryPropsType> = ({story})=>{\r\n    let storyStyles = {\r\n       background: `${story.story}`\r\n    }\r\n\r\n    return <div className={s.story} style={storyStyles}>\r\n        <div className={s.user}>\r\n            <img className={s.user__image} src={story.user.imageSRC} alt=\"\"/>\r\n            <div className={s.user__name}>{story.user.name}</div>\r\n        </div>\r\n    </div>\r\n}","import { connect } from 'react-redux'\r\nimport {Stories} from './Stories';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {FeedStoriesType} from '../../../redux/feed-reducer';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    feedStories: FeedStoriesType\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType):MapStatePropsType => {\r\n    return {\r\n        feedStories: state.newsPage.feedStories\r\n    }\r\n}\r\ntype MapDispatchPropsType = {\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch):MapDispatchPropsType => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport const StoriesContainer = connect(mapStateToProps, mapDispatchToProps)(Stories)","import React from 'react'\r\nimport s from './Stories.module.scss'\r\nimport {FeedStoriesType} from '../../../redux/feed-reducer';\r\nimport { Story } from './Story/Story';\r\n\r\ntype StoriesPropsType = {\r\n    feedStories: FeedStoriesType\r\n}\r\n\r\nexport const Stories: React.FC<StoriesPropsType> = (props)=>{\r\n    return <div className={s.body}>\r\n    <div className={s.stories}>\r\n        {props.feedStories.map(f=><Story key={f.id} story={f}/>)}\r\n    </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport {PostTextArea} from '../common/PostTextArea/PostTextArea';\r\nimport s from './News.module.scss';\r\nimport Post from '../Profile/MyPosts/Post/Post';\r\nimport {UserInfoType} from '../../redux/profile-reducer';\r\nimport {FeedPostsType} from '../../redux/feed-reducer';\r\nimport {StoriesContainer} from './Stories/StoriesContainer';\r\n\r\ntype NewsPropsType = {\r\n    feedNewPostText: string\r\n    onPostChange: (text: string)=>void\r\n    userInfo: UserInfoType\r\n    onItemAddClick: ()=>void\r\n    feedPost: FeedPostsType\r\n}\r\n\r\nconst News: React.FC<NewsPropsType> = (props) => {\r\n    return (\r\n        <div className={s.feed}>\r\n            <StoriesContainer/>\r\n            <PostTextArea value={props.feedNewPostText}\r\n                          onChangeText={props.onPostChange}\r\n                          user={props.userInfo}\r\n                          addItem={props.onItemAddClick}/>\r\n            {\r\n                props.feedPost.map(t => <Post key={t.id} message={t.message} img={t.src} id={t.id}/>).reverse()\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default News\r\n\r\n","import {ProfilePageType, profileReducer} from './profile-reducer';\r\nimport {DialogsPageType, dialogsReducer} from './dialogs-reducer';\r\nimport {feedReducer, NewsPageType} from './feed-reducer';\r\nimport {ActionsType} from './redux-store';\r\n\r\nexport let firstSrc = 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false';\r\nexport let secondSrc = 'https://static.turbosquid.com/Preview/001325/881/YD/_600.jpg';\r\n/*------STATE TYPE------*/\r\n\r\n\r\n\r\n/*-------main------*/\r\ntype RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    newsPage: NewsPageType\r\n}\r\n/*------STATE TYPE------*/\r\n\r\n/*------------STORE TYPE------------*/type StoreType = {\r\n    _state: RootStateType\r\n    _callbackSubscriber: (state: RootStateType) => void\r\n    getState: () => RootStateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionsType) => void\r\n}\r\n/*------------STORE TYPE------------*/\r\n/*--actions type--*/\r\n\r\n/*--actions type--*/\r\n/*---------------------------STORE---------------------------*/\r\nconst store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            userInfo: {\r\n                imageSRC: 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n                name: 'Temirtas',\r\n                surname: 'Nursain',\r\n                eMail: 'dalionfull@gmail.com'\r\n            },\r\n            post: [\r\n                {id: 1, src: secondSrc, message: 'That is my wall?'},\r\n\r\n            ],\r\n            newPostText: '',\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: '@Tasya', name: 'Tasya'},\r\n                {id: '@Alex', name: 'Alex'},\r\n                {id: '@Fox', name: 'Fox'},\r\n                {id: '@Drill', name: 'Drill'},\r\n                {id: '@Genius', name: 'Genius'},\r\n                {id: '@Uncle', name: 'Uncle'},\r\n                {id: '@GQtpe', name: 'GQtpe'},\r\n                {id: '@Alina', name: 'Alina'},\r\n            ],\r\n            messages: [\r\n                {id: 1, sent: true, message: 'Hi!'},\r\n                {id: 2, sent: false, message: 'Hi!'},\r\n                {id: 3, sent: true, message: 'How do you feel'},\r\n                {id: 4, sent: false, message: 'I feel Incredibly good'},\r\n                {id: 5, sent: true, message: 'Ok, bye'},\r\n                {id: 6, sent: false, message: 'Bye'},\r\n            ],\r\n            newMessageText: '',\r\n            error: null,\r\n        },\r\n        newsPage: {\r\n            userInfo: {\r\n                imageSRC: 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n                name: 'Temirtas',\r\n                surname: 'Nursain',\r\n                eMail: 'dalionfull@gmail.com'\r\n            },\r\n            feedStories: [],\r\n            feedNewPostText: '',\r\n            feedPosts: [\r\n                {id: 1, src: secondSrc, message: 'LALALA'}\r\n            ],\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    _callbackSubscriber(state: RootStateType) {\r\n        console.log(`App rendering... ${state}`)\r\n    },\r\n    subscribe(observer: () => void) {\r\n        this._callbackSubscriber = observer\r\n    },\r\n    dispatch(action) { //{type: string, args..}\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action)\r\n        this._state.newsPage = feedReducer(this._state.newsPage, action)\r\n        this._callbackSubscriber(this._state)\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nconsole.log(store)\r\n/*---------------------------STORE---------------------------*/","import {UserInfoType} from './profile-reducer';\r\nimport {ActionsType} from './redux-store';\r\nimport {firstSrc, secondSrc} from './state';\r\n\r\nexport type FeedStoryType = {\r\n    user: {\r\n        name: string\r\n        surname: string\r\n        imageSRC: string\r\n    },\r\n    story: any,\r\n    id: number\r\n}\r\nexport type FeedStoriesType = Array<FeedStoryType>\r\n\r\nexport type FeedPostType = {\r\n    id: number\r\n    src: string\r\n    message: string\r\n}\r\nexport type FeedPostsType = Array<FeedPostType>\r\n\r\nexport type NewsPageType = {\r\n    userInfo: UserInfoType\r\n    feedStories: FeedStoriesType\r\n    feedNewPostText: string\r\n    feedPosts: FeedPostsType\r\n}\r\n\r\nlet initialState: NewsPageType = {\r\n    userInfo: {\r\n        imageSRC: 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n        name: 'Temirtas',\r\n        surname: 'Nursain',\r\n        eMail: 'dalionfull@gmail.com'\r\n    },\r\n\r\n    feedStories: [\r\n        {\r\n            user: {\r\n                imageSRC: 'avatar',\r\n                name: 'Tasya',\r\n                surname: 'Tasya'\r\n            },\r\n            id: 1,\r\n            story: 'brown'\r\n        },\r\n        {\r\n            user: {\r\n                imageSRC: 'avatar',\r\n                name: 'User',\r\n                surname: 'Padj'\r\n            },\r\n            id: 2,\r\n            story: 'cornflowerblue'\r\n        },\r\n    ],\r\n    feedNewPostText: '',\r\n    feedPosts: [\r\n        {id: 1, src: secondSrc, message: 'LALALA'}\r\n    ],\r\n}\r\n\r\nexport const feedReducer = (state: NewsPageType = initialState, action: ActionsType): NewsPageType => {\r\n    if (action.type === 'ADD-FEED-POST') {\r\n        let newFeedPost: FeedPostType = {\r\n            id: state.feedPosts[state.feedPosts.length - 1].id + 1,\r\n            message: state.feedNewPostText,\r\n            src: action.src === 1 ? firstSrc : secondSrc,\r\n        }\r\n        state.feedPosts.push(newFeedPost)\r\n        state.feedNewPostText = ''\r\n\r\n    }\r\n    if (action.type === 'FEED-INPUT-CHANGE') {\r\n        state.feedNewPostText = `${action.text}`\r\n    }\r\n    return {...state}\r\n}\r\nexport const addFeedPostAC = (src: 1 | 2) => {\r\n    return {\r\n        type: 'ADD-FEED-POST',\r\n        src: src\r\n    } as const\r\n\r\n}\r\nexport const feedInputChangeAC = (text: string) => {\r\n    return {\r\n        type: 'FEED-INPUT-CHANGE',\r\n        text: text\r\n    } as const\r\n}","import {AppStateType} from '../../redux/redux-store';\r\nimport News from './News';\r\nimport {addFeedPostAC, feedInputChangeAC, FeedPostsType} from '../../redux/feed-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {UserInfoType} from '../../redux/profile-reducer';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    feedPost: FeedPostsType\r\n    userInfo: UserInfoType\r\n    feedNewPostText: string\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        feedPost: state.newsPage.feedPosts,\r\n        userInfo: state.newsPage.userInfo,\r\n        feedNewPostText: state.newsPage.feedNewPostText,\r\n    }\r\n}\r\ntype MapDispatchPropsType = {\r\n    onItemAddClick: () => void\r\n    onPostChange: (text: string) => void\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onItemAddClick: () => dispatch(addFeedPostAC(1)),\r\n        onPostChange: (text: string) => dispatch(feedInputChangeAC(text))\r\n    }\r\n}\r\n\r\n\r\nconst NewsContainer = connect(mapStateToProps, mapDispatchToProps)(News)\r\n\r\nexport default NewsContainer\r\n\r\n","import React from 'react';\r\nimport s from './User.module.scss'\r\n\r\ntype UserPropsType = {\r\n    userIMG: string\r\n    userName: string\r\n    userStatus: string\r\n    followed: boolean\r\n    toggleFollow: (userID: number) => void\r\n    userID: number\r\n    country: string\r\n    city: string\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = (props) => {\r\n    let something = props.followed ? 'REMOVE FRIEND' : 'ADD FRIEND'\r\n    let stylesForFollowButton = {\r\n        color: 'white',\r\n        minWidth: '120px',\r\n        background: props.followed? 'firebrick':'#10d876',\r\n        padding: '14px',\r\n        maxHeight: '50px',\r\n        borderRadius: '0.3rem',\r\n        fontWeight: '700',\r\n        fontFamily: 'Montserrat, sans-serif',\r\n        fontSize: '10px'\r\n    }\r\n    return <div className={s.users}>\r\n        <div className={s.users__first}>\r\n            <img src={props.userIMG} className={s.users__img} alt=\"\"/>\r\n            <button\r\n                onClick={() => props.toggleFollow(props.userID)}\r\n                style={stylesForFollowButton}\r\n            >\r\n                {\r\n                    something\r\n                }\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <div className={s.users__name}>{props.userName}</div>\r\n                <div className={s.users__location}>Location: {props.country}, {props.city}</div>\r\n            <div className={s.users__status}>Status: {props.userStatus}</div>\r\n        </div>\r\n\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/JOJO.5dc27e80.png\";","import {ActionsType} from './redux-store'\r\nimport s from '../img/JOJO.png'\r\n\r\nexport type UserType = {\r\n    id: number\r\n    followed: boolean\r\n    imageSRC: string\r\n    fullName: string\r\n    status: string\r\n    country: string\r\n    city: string\r\n}\r\n\r\nexport type UserPageType = {\r\n    users: UserType[]\r\n}\r\n\r\nlet initialState: UserPageType = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            imageSRC: s,\r\n            status: 'I am a tasya\\'s kent, and childhood best friend)',\r\n            followed: false,\r\n            fullName: 'Rakhat Sovet',\r\n            country: 'Kazakhstan',\r\n            city: 'Nur-sultan'\r\n        },\r\n        {\r\n            id: 2,\r\n            imageSRC: s,\r\n            status: 'I am a tasya\\'s kent)',\r\n            followed: false,\r\n            fullName: 'Ermekov Sanjar',\r\n            country: 'Kazakhstan',\r\n            city: 'Nur-sultan'\r\n        },\r\n        {\r\n            id: 3,\r\n            imageSRC: s,\r\n            status: 'I am a tasya\\'s kent)',\r\n            followed: false,\r\n            fullName: 'Bekzat Sultan',\r\n            country: 'Kazakhstan',\r\n            city: 'Almaty'\r\n        },\r\n        {\r\n            id: 4,\r\n            imageSRC: s,\r\n            status: 'I am a tasya\\'s kent)',\r\n            followed: false,\r\n            fullName: 'Gabdullin Adilbek',\r\n            country: 'Kazakhstan',\r\n            city: 'Almaty'\r\n        },\r\n        {\r\n            id: 5,\r\n            imageSRC: s,\r\n            status: 'I am a tasya\\'s kent)',\r\n            followed: false,\r\n            fullName: 'Kakimzhan Dias',\r\n            country: 'Kazakhstan',\r\n            city: 'Almaty'\r\n        },\r\n    ]\r\n}\r\n\r\nexport const userReducer = (state: UserPageType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'TOGGLE-FOLLOW':\r\n            let curr = state.users.find(u => u.id === action.userID)\r\n            if (curr) {\r\n                curr.followed = !curr.followed\r\n            }\r\n            return {\r\n                ...state,\r\n            users: [...state.users]\r\n            }\r\n        case 'SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\nexport let toggleFollowAC = (userID: number) => {\r\n    return {\r\n        type: 'TOGGLE-FOLLOW',\r\n        userID: userID,\r\n    } as const\r\n}\r\nexport let setUsersAC = (users: UserType[]) => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users: users\r\n    } as const\r\n}\r\n","import {connect} from 'react-redux';\r\nimport { Users } from './Users';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport { Dispatch } from 'redux';\r\nimport {toggleFollowAC, UserType} from '../../redux/user-reducer';\r\n\r\ntype MapStatePropsType = {\r\n    users: UserType[]\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType):MapStatePropsType =>{\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\ntype MapDispatchPropsType = {\r\n    toggleFollow: (userID: number)=>void\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch):MapDispatchPropsType =>{\r\n    const toggleFollow = (userID: number) =>{\r\n        dispatch(toggleFollowAC(userID))\r\n    }\r\n\r\n    return {\r\n        toggleFollow,\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\r\nimport {UserType} from '../../redux/user-reducer';\r\nimport {User} from './User/User';\r\n\r\ntype UsersPropsType = {\r\n    users: UserType[]\r\n    toggleFollow: (userID: number) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = ({users, toggleFollow}) => {\r\n    return <div>\r\n        {users.map(u => <User key={u.id}\r\n                              toggleFollow={toggleFollow}\r\n                              userID={u.id}\r\n                              userIMG={u.imageSRC}\r\n                              userName={u.fullName}\r\n                              userStatus={u.status}\r\n                              followed={u.followed}\r\n                              country={u.country}\r\n                              city={u.city}\r\n        />)}\r\n    </div>\r\n}","import React from 'react';\nimport './App.scss';\nimport {Header} from './components/Header/Header';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Music from './components/Music/Music';\nimport Profile from './components/Profile/Profile';\nimport Settings from './components/Settings/Settings';\nimport {ReduxStoreType} from './redux/redux-store';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport NewsContainer from './components/News/NewsContainer';\nimport { UsersContainer } from './components/Users/UsersContainer';\n\n//types\ntype AppPropsType = {\n    store: ReduxStoreType\n}\n\n\nconst App: React.FC<AppPropsType> = (props) => {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header title={'Social Network'}/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route render={() => <Profile store={props.store}/>} path='/social-network/profile'/>\n\n\n                    <Route render={() => <DialogsContainer/>} path='/social-network/dialogs'/>\n\n\n                    <Route render={() => <UsersContainer/>} path='/social-network/users'/>\n\n\n                    <Route render={() => <NewsContainer/>} path='/social-network/feed'/>\n\n\n                    <Route render={() => <Music/>} path='/social-network/audio'/>\n\n\n                    <Route render={() => <Settings/>} path='/social-network/settings'/>\n\n\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\r\nimport {addPostAC, profileInputChangeAC, profileReducer} from './profile-reducer';\r\nimport {addFeedPostAC, feedInputChangeAC, feedReducer} from './feed-reducer';\r\nimport {dialogInputChangeAC, dialogsReducer, fakeDialogsAC, sendMessageAC} from './dialogs-reducer';\r\nimport {setUsersAC, toggleFollowAC, userReducer} from './user-reducer';\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof sendMessageAC>\r\n    | ReturnType<typeof dialogInputChangeAC>\r\n    | ReturnType<typeof profileInputChangeAC>\r\n    | ReturnType<typeof fakeDialogsAC>\r\n    | ReturnType<typeof addFeedPostAC>\r\n    | ReturnType<typeof feedInputChangeAC>\r\n    | ReturnType<typeof toggleFollowAC>\r\n    | ReturnType<typeof setUsersAC>\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    newsPage: feedReducer,\r\n    usersPage: userReducer,\r\n})\r\n\r\nlet store = createStore(reducers);\r\nexport type ReduxStoreType = typeof store\r\nexport type AppStateType = ReturnType<typeof reducers>\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store, {ReduxStoreType} from './redux/redux-store'\nimport {Provider} from 'react-redux';\n\n\nlet rerenderEntireTree = (store: ReduxStoreType)=>{\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n            <App\n                store={store}\n            />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrerenderEntireTree(store)\nstore.subscribe(()=>{rerenderEntireTree(store)})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}