{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Navbar/Navbar.module.scss","components/Profile/UserInfo/UserInfo.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/common/PostTextArea/PostTextArea.module.scss","components/Header/Header.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/Profile.module.scss","components/Profile/Statistics/Statistics.module.scss","components/News/News.module.scss","components/News/Stories/Stories.module.scss","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/Profile/Statistics/Statistics.tsx","components/Profile/UserInfo/UserInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/common/PostTextArea/PostTextArea.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/News/Stories/Story/Story.tsx","components/News/Stories/Stories.tsx","components/News/News.tsx","redux/state.ts","redux/feed-reducer.ts","components/News/NewsContainer.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","Header","props","className","s","header","header__logo","src","alt","header__title","title","Navbar","wrapper","nav","activeClassName","active","nav__button","to","Music","Statistics","statistics","UserInfo","userInfo","userInfo__img","style","background","userInfo__info","userInfo__ava","state","imageSRC","userInfo__title","name","surname","userInfo__subtitle","eMail","userInfo__buttons","buttons","buttons__friendAdd","buttons__chat","size","buttons__other","firstSrc","secondSrc","initialState","post","id","message","newPostText","profileReducer","action","type","newPost","length","push","text","Post","useState","like","setLike","post__title","img","post__img","post__name","post__time","post__text","footer","color","onClick","footer__like","PostTextArea","error","setError","onAddPostButtonClick","value","trim","addItem","textAreaStyles","border","postADD","postADD__sendButton","postADD__inputArea","postADD__spanERROR","user","textarea","onChange","e","onChangeText","currentTarget","onKeyPress","key","shiftKey","preventDefault","placeholder","cols","rows","onBlur","MyPosts","addPost","onPostChange","postElements","map","t","reverse","myPosts","myPosts__posts","MyPostsContainer","store","posts","getState","profilePage","userInfoForPost","dispatch","profileInputChangeAC","addPostAC","Profile","content","Settings","dialogs","messages","sent","newMessageText","dialogsReducer","newMessage","Message","senDED","DialogsItem","onDialogItemClick","Dialogs","dialogElements","dialogItems","messageElements","dialogMessages","dialogs__items","dialogIcon","dialogs__messages","dialogs__typing","errorInput","dialogs__input","onInputChange","onEnterKeyPress","dialogs__send","onSentButtonClick","DialogsContainer","dialogsPage","Story","story","Stories","stories","News","feed","feedNewPostText","onItemAddClick","feedPost","_state","newsPage","feedStories","feedPosts","this","_callbackSubscriber","console","log","subscribe","observer","feedReducer","newFeedPost","NewsContainer","addFeedPostAC","feedInputChangeAC","App","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","createStore","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a020574a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1dBP5\",\"dialogs__items\":\"Dialogs_dialogs__items__jOlgl\",\"active\":\"Dialogs_active__FZ6Up\",\"dialogs__messages\":\"Dialogs_dialogs__messages__kMWDR\",\"message\":\"Dialogs_message__VTYvh\",\"senDED\":\"Dialogs_senDED__1kqdo\",\"dialogs__input\":\"Dialogs_dialogs__input__3NOt1\",\"errorInput\":\"Dialogs_errorInput__1nyn6\",\"dialogs__send\":\"Dialogs_dialogs__send__iSgQK\",\"dialogs__typing\":\"Dialogs_dialogs__typing__x-eK-\",\"dialogIcon\":\"Dialogs_dialogIcon__2Mjh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav__button\":\"Navbar_nav__button__3MpAs\",\"wrapper\":\"Navbar_wrapper__1lrPC\",\"nav\":\"Navbar_nav__1KVb6\",\"nav__img\":\"Navbar_nav__img__24tcx\",\"active\":\"Navbar_active__3EB6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"UserInfo_userInfo__3WllZ\",\"userInfo__img\":\"UserInfo_userInfo__img__1Z6h8\",\"userInfo__info\":\"UserInfo_userInfo__info__1byRe\",\"userInfo__ava\":\"UserInfo_userInfo__ava__3zjeK\",\"userInfo__title\":\"UserInfo_userInfo__title__23Rds\",\"userInfo__subtitle\":\"UserInfo_userInfo__subtitle__ohry9\",\"userInfo__buttons\":\"UserInfo_userInfo__buttons__d9iZk\",\"buttons\":\"UserInfo_buttons__fvVWj\",\"buttons__friendAdd\":\"UserInfo_buttons__friendAdd__1NthV\",\"buttons__chat\":\"UserInfo_buttons__chat__2Qq9i\",\"buttons__other\":\"UserInfo_buttons__other__7oolp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1eAfH\",\"post__img\":\"Post_post__img__iMRn3\",\"post__title\":\"Post_post__title__1QEjq\",\"post__buttons\":\"Post_post__buttons__1cJRs\",\"post__name\":\"Post_post__name__3ZI1a\",\"post__time\":\"Post_post__time__1_Tbo\",\"post__text\":\"Post_post__text__1Iu7c\",\"footer\":\"Post_footer__1G8ri\",\"footer__like\":\"Post_footer__like__3rIPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postADD\":\"PostTextArea_postADD__vu13b\",\"postADD__sendButton\":\"PostTextArea_postADD__sendButton__rf-jf\",\"postADD__inputArea\":\"PostTextArea_postADD__inputArea__LtpGd\",\"postADD__spanERROR\":\"PostTextArea_postADD__spanERROR__qXpek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1yj3X\",\"header__logo\":\"Header_header__logo__3F0tN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1xkaD\",\"addPost\":\"MyPosts_addPost__21Y59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2-vFf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1JjQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"News_feed__1HcZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stories\":\"Stories_stories__3Hyml\"};","import React from 'react';\r\nimport s from './Header.module.scss';\r\ntype HeaderPropsType = {\r\n    title: string\r\n}\r\nexport const Header: React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.header__logo}>\r\n                <img src=\"https://www.renaultgroup.com/wp-content/uploads/2021/03/nouveau_logo_renault_banner.jpg\"\r\n                     alt=''/>\r\n                <span>temp logo</span>\r\n            </div>\r\n            <div className={s.header__title}>\r\n                {props.title}\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.scss';\r\nimport {AlignLeft, MessageSquare, Music, Settings, User} from 'react-feather';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.nav}>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/profile'>\r\n                    <User/>\r\n                    <span>Profile</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/dialogs'>\r\n                    <MessageSquare/>\r\n                    <span>Dialogs</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/feed'>\r\n                    <AlignLeft/>\r\n                    <span>News</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/audio'>\r\n                    <Music/>\r\n                    <span>Music</span>\r\n                </NavLink>\r\n                <NavLink activeClassName={s.active} className={s.nav__button} to='/social-network/settings'>\r\n                    <Settings/>\r\n                    <span>Settings</span>\r\n                </NavLink>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar;","import React from \"react\";\r\n// import s from './Music.module.scss';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music\r\n\r\n","import React from \"react\";\r\nimport s from './Statistics.module.scss'\r\n\r\nconst Statistics: React.FC = (props) =>{\r\n    return <div>\r\n        <div className={s.statistics}>hi i am statistic</div>\r\n    </div>\r\n}\r\nexport default Statistics","import React from 'react';\r\nimport {Mail, MoreHorizontal} from 'react-feather';\r\nimport s from './UserInfo.module.scss'\r\nimport {UserInfoType} from '../../../redux/state';\r\n\r\ntype UserInfoPropsType = {\r\n    state: UserInfoType\r\n}\r\n\r\n\r\nconst UserInfo: React.FC<UserInfoPropsType> = (props) => {\r\n    let backgroundImageStyle = {\r\n        background: 'red'\r\n    }\r\n    return (\r\n        <div className={s.userInfo}>\r\n            <div className={s.userInfo__img} style={backgroundImageStyle}>\r\n                <div>\r\n                    background image\r\n                </div>\r\n            </div>\r\n            <div className={s.userInfo__info}>\r\n                <img className={s.userInfo__ava} src={props.state.imageSRC} alt=''/>\r\n                <div>\r\n                    <div className={s.userInfo__title}>{props.state.name} {props.state.surname}</div>\r\n                    <div className={s.userInfo__subtitle}>{props.state.eMail}</div>\r\n                </div>\r\n                <div className={`${s.userInfo__buttons} ${s.buttons}`}>\r\n                    <button className={s.buttons__friendAdd}>ADD FRIEND</button>\r\n                    <button className={s.buttons__chat}><Mail size={20}/></button>\r\n                    <button className={s.buttons__other}><MoreHorizontal size={20}/></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserInfo;","import {ActionsType, PostType, ProfilePageType} from './state';\r\nexport let firstSrc = 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false';\r\nexport let secondSrc = 'https://static.turbosquid.com/Preview/001325/881/YD/_600.jpg';\r\nlet initialState: ProfilePageType = {\r\n    userInfo: {\r\n        imageSRC: 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n        name: 'Temirtas',\r\n        surname: 'Nursain',\r\n        eMail: 'dalionfull@gmail.com'\r\n    },\r\n    post: [\r\n        {id: 1, src: secondSrc, message: 'That is my wall?'},\r\n\r\n    ],\r\n    newPostText: '',\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action:ActionsType) =>{\r\n    if (action.type === 'ADD-POST') {\r\n        let newPost: PostType = {\r\n            id: state.post[state.post.length - 1].id + 1,\r\n            src: action.src === 1 ? firstSrc : secondSrc,\r\n            message: state.newPostText,\r\n        }\r\n        state.post.push(newPost)\r\n        state.newPostText = ''\r\n    }\r\n    if (action.type === 'PROFILE-INPUT-CHANGE') {\r\n        state.newPostText = `${action.text}`\r\n    }\r\n    return state\r\n}/*----AC----*/\r\nexport const addPostAC = (src: 1 | 2) => {\r\n    return {\r\n        type: 'ADD-POST',\r\n        src: src\r\n    } as const\r\n}\r\nexport const profileInputChangeAC = (text: string) => {\r\n    return {\r\n        type: 'PROFILE-INPUT-CHANGE',\r\n        text: text,\r\n    } as const\r\n}","import React, { useState } from \"react\";\r\nimport s from './Post.module.scss'\r\nimport {Heart} from 'react-feather';\r\n\r\ntype PropsType = {\r\n    message: string,\r\n    img: string\r\n    id: number\r\n}\r\nconst Post: React.FC<PropsType> = (props) => {\r\n    let [like, setLike] = useState<boolean>(false)\r\n    const onLikeButtonClick = () =>{\r\n        setLike(!like)\r\n    }\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.post__title}>\r\n                <img src={props.img} alt=\"\" className={s.post__img}/>\r\n                <div>\r\n                    <div className={s.post__name}>Name Surname</div>\r\n                    <div className={s.post__time}>4 hour ago</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.post__text}>\r\n                <div>{props.message}</div>\r\n            </div>\r\n            <div className={s.footer}><Heart color={like?'red':'black'} onClick={onLikeButtonClick}  size={20} className={s.footer__like}/></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './PostTextArea.module.scss'\r\nimport {Plus} from 'react-feather';\r\nimport {UserInfoType} from '../../../redux/state';\r\n\r\n\r\ntype PostTextAreaPropsType = {\r\n    value: string\r\n    addItem: ()=>void\r\n    onChangeText: (text: string)=>void\r\n    user: UserInfoType\r\n}\r\n\r\nexport const PostTextArea: React.FC<PostTextAreaPropsType> = (props) => {\r\n    let [error, setError] = useState<string | null>();\r\n    let onAddPostButtonClick = () => {\r\n        if (props.value.trim() !== '') {\r\n            props.addItem();\r\n            setError('')\r\n        } else {\r\n            setError('required field')\r\n        }\r\n\r\n\r\n    }\r\n    let onEnterKeyPressHandler = (e: React.KeyboardEvent) => {\r\n\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n        }\r\n        if (e.key === 'Enter') {\r\n            onAddPostButtonClick()\r\n        }\r\n\r\n    }\r\n    const onChangeCallBack = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setError(null)\r\n        props.onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    let textAreaStyles = {\r\n        border: error?'2px solid lightcoral':'2px solid #F1F1F1'\r\n    }\r\n    return (<div className={s.postADD}>\r\n            <button className={s.postADD__sendButton} onClick={onAddPostButtonClick}>\r\n                <Plus/>\r\n                <>Create post</>\r\n            </button>\r\n\r\n            <div className={s.postADD__inputArea}>\r\n                {error && <span className={s.postADD__spanERROR}>{error}</span>}\r\n                <img src={props.user.imageSRC} alt=\"\"/>\r\n                <textarea\r\n                    className={s.textarea}\r\n                    onChange={onChangeCallBack}\r\n                    onKeyPress={onEnterKeyPressHandler}\r\n                    placeholder={'What\\'s on your mind'}\r\n                    cols={30}\r\n                    rows={10}\r\n                    value={props.value}\r\n                    style={textAreaStyles}\r\n                    onBlur={()=>setError(null)}\r\n                >\r\n            </textarea>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\r\nimport s from './MyPosts.module.scss'\r\nimport Post from './Post/Post';\r\nimport {PostsType, UserInfoType} from '../../../redux/state';\r\nimport {PostTextArea} from '../../common/PostTextArea/PostTextArea';\r\n\r\n\r\ntype MyPostsPropsType = {\r\n    post: PostsType\r\n    newPostText: string\r\n    userInfo: UserInfoType\r\n    addPost: ()=>void\r\n    onPostChange: (text: string)=>void\r\n}\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = ({post,newPostText, userInfo, addPost, onPostChange}) => {\r\n    //converting post state to Post component\r\n    let postElements = post.map((t) => <Post key={t.id} id={t.id} message={t.message} img={t.src}\r\n    />).reverse()\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <PostTextArea\r\n                value={newPostText}\r\n                user={userInfo}\r\n                addItem={addPost}\r\n                onChangeText={onPostChange}\r\n            />\r\n            <div className={s.myPosts__posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC, profileInputChangeAC} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {ReduxStoreType} from '../../../redux/redux-store';\r\n\r\n\r\ntype MyPostsPropsType = {\r\nstore: ReduxStoreType\r\n}\r\n\r\nconst MyPostsContainer: React.FC<MyPostsPropsType> = ({store}) => {\r\n    let posts = store.getState().profilePage.post\r\n    let newPostText = store.getState().profilePage.newPostText\r\n    let userInfoForPost = store.getState().profilePage.userInfo\r\n    const addPost = () =>{\r\n        store.dispatch(addPostAC(1))\r\n    }\r\n    const onPostChange = (text: string) =>{\r\n        store.dispatch(profileInputChangeAC(text))\r\n    }\r\n\r\n    return <MyPosts onPostChange={onPostChange} addPost={addPost} userInfo={userInfoForPost} newPostText={newPostText} post={posts}/>\r\n\r\n}\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from './Profile.module.scss';\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport UserInfo from \"./UserInfo/UserInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {ReduxStoreType} from '../../redux/redux-store';\r\n//types\r\ntype ProfilePropsType = {\r\n    store: ReduxStoreType\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <UserInfo state={props.store.getState().profilePage.userInfo} />\r\n            <Statistics />\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\n// import s from './Settings.module.scss';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings\r\n\r\n","import {ActionsType, DialogsPageType, MessageType} from './state';\r\n\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {id: '@Tasya', name: 'Tasya'},\r\n        {id: '@Alex', name: 'Alex'},\r\n        {id: '@Fox', name: 'Fox'},\r\n        {id: '@Drill', name: 'Drill'},\r\n        {id: '@Genius', name: 'Genius'},\r\n        {id: '@Uncle', name: 'Uncle'},\r\n        {id: '@GQtpe', name: 'GQtpe'},\r\n        {id: '@Alina', name: 'Alina'},\r\n    ],\r\n    messages: [\r\n        {id: 1, sent: true, message: 'Hi!'},\r\n        {id: 2, sent: false, message: 'Hi!'},\r\n        {id: 3, sent: true, message: 'How do you feel'},\r\n        {id: 4, sent: false, message: 'I feel Incredibly good'},\r\n        {id: 5, sent: true, message: 'Ok, bye'},\r\n        {id: 6, sent: false, message: 'Bye'},\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: ActionsType) =>{\r\n    if (action.type === 'SEND-MESSAGE') {\r\n        let newMessage: MessageType = {\r\n            id: state.messages.length !== 0 ? state.messages[state.messages.length - 1].id + 1 : 1,\r\n            sent: true,\r\n            message: state.newMessageText\r\n        }\r\n        state.messages.push(newMessage)\r\n        state.newMessageText = ''\r\n    }\r\n    if (action.type === 'DIALOG-INPUT-CHANGE') {\r\n        state.newMessageText = `${action.text}`\r\n    }\r\n    if (action.type === 'FAKE-DIALOGS') {\r\n        state.messages = []\r\n    }\r\n    return state\r\n}\r\nexport const sendMessageAC = () => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n    } as const\r\n}\r\nexport const fakeDialogsAC = () => {\r\n    return {\r\n        type: 'FAKE-DIALOGS',\r\n    } as const\r\n}\r\nexport const dialogInputChangeAC = (text: string) => {\r\n    return {\r\n        type: 'DIALOG-INPUT-CHANGE',\r\n        text: text\r\n    } as const\r\n}","import React from \"react\";\r\nimport s from '../Dialogs.module.scss';\r\n\r\ntype MessagePropsType = {\r\n    text: string,\r\n    sent: boolean,\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return <span className={(props.sent?s.senDED:null) + ' ' + s.message}>{props.text}</span>\r\n\r\n}\r\nexport default Message;\r\n\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.scss';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogPropsType = {\r\n    name: string,\r\n    id: string,\r\n    onDialogItemClick: ()=>void\r\n}\r\n\r\nconst DialogsItem = (props: DialogPropsType) => {\r\n    return <NavLink onClick={() => props.onDialogItemClick()} activeClassName={s.active}\r\n                    to={`/social-network/dialogs/${props.id}`}>{props.name}</NavLink>\r\n}\r\n\r\nexport default DialogsItem\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport Message from './Message/Message';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport {ArrowRight, MessageCircle} from 'react-feather';\r\nimport {DialogsType, MessagesType} from '../../redux/state';\r\n\r\ntype DialogsPropsType = {\r\n    dialogItems: DialogsType\r\n    dialogMessages: MessagesType\r\n    onDialogItemClick: ()=>void\r\n    newMessageText: string\r\n    error: string|null\r\n    onInputChange: (e: ChangeEvent<HTMLInputElement>)=>void\r\n    onEnterKeyPress: (e: React.KeyboardEvent)=>void\r\n    onSentButtonClick: ()=>void\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    //converting state to component\r\n    let dialogElements = props.dialogItems.map((t) => <DialogsItem onDialogItemClick={props.onDialogItemClick} key={t.id} name={t.name} id={t.id}/>)\r\n    let messageElements = props.dialogMessages.map((t) => <Message sent={t.sent} key={t.id} text={t.message}/>)\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__items}>\r\n                <MessageCircle className={s.dialogIcon}/>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.dialogs__messages}>\r\n                {messageElements}\r\n                <div className={s.dialogs__typing}><input value={props.newMessageText}\r\n                                                          className={(props.error&&s.errorInput) + ' ' + s.dialogs__input} type=\"text\"\r\n                                                          placeholder={'Start typing..'}\r\n                                                          onChange={props.onInputChange}\r\n                onKeyPress={props.onEnterKeyPress}/><span\r\n                    className={s.dialogs__send}><ArrowRight  onClick={props.onSentButtonClick}/></span></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {dialogInputChangeAC, fakeDialogsAC, sendMessageAC} from '../../redux/dialogs-reducer';\r\nimport {ReduxStoreType} from '../../redux/redux-store';\r\nimport Dialogs from './Dialogs';\r\n\r\ntype DialogsContainerPropsType = {\r\n    store: ReduxStoreType\r\n}\r\n\r\n\r\nconst DialogsContainer: React.FC<DialogsContainerPropsType> = ({store}) => {\r\n\r\n    let dialogItems = store.getState().dialogsPage.dialogs\r\n    let dialogMessages = store.getState().dialogsPage.messages\r\n\r\n    const onDialogItemClick = () =>{\r\n        store.dispatch(fakeDialogsAC())\r\n    }\r\n    let newMessageText = store.getState().dialogsPage.newMessageText\r\n    //local state\r\n    let [error, setError] = useState<string|null>(null);\r\n    //converting state to component\r\n\r\n    //event handlers\r\n    const onMessageInputChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        store.dispatch(dialogInputChangeAC(`${e.currentTarget.value}`))\r\n    }\r\n    const enterKeyDownHandler = (e: React.KeyboardEvent) =>{\r\n        e.key === \"Enter\" && onSentButtonClick()\r\n    }\r\n    //callback\r\n    const onSentButtonClick = () =>{\r\n        if(store.getState().dialogsPage.newMessageText.trim() === ''){\r\n            setError('required field');\r\n        }else{\r\n            store.dispatch(sendMessageAC())\r\n        }\r\n    }\r\n    return <Dialogs onSentButtonClick={onSentButtonClick} onEnterKeyPress={enterKeyDownHandler} onInputChange={onMessageInputChangeHandler} error={error} newMessageText={newMessageText} dialogItems={dialogItems} dialogMessages={dialogMessages} onDialogItemClick={onDialogItemClick} />\r\n}\r\n\r\nexport default DialogsContainer\r\n\r\n","import React from 'react'\r\nimport s from './Story.module.scss'\r\n\r\ntype StoryPropsType = {\r\n\r\n}\r\n\r\nexport const Story: React.FC<StoryPropsType> = ()=>{\r\n    return <div className={s.story}>\r\n\r\n    </div>\r\n}","import React from 'react'\r\nimport s from './Stories.module.scss'\r\nimport { Story } from './Story/Story'\r\n\r\ntype StoriesPropsType = {\r\n\r\n}\r\n\r\nexport const Stories: React.FC<StoriesPropsType> = ()=>{\r\n    return <div className={s.stories}>\r\n            <Story/>\r\n            <Story/>\r\n            <Story/>\r\n            <Story/>\r\n            <Story/>\r\n            <Story/>\r\n    </div>\r\n}","import React from 'react';\r\nimport {PostTextArea} from '../common/PostTextArea/PostTextArea';\r\nimport {FeedPostsType, UserInfoType} from '../../redux/state';\r\nimport s from './News.module.scss';\r\nimport Post from '../Profile/MyPosts/Post/Post';\r\nimport {Stories} from './Stories/Stories';\r\n\r\ntype NewsPropsType = {\r\n    feedNewPostText: string\r\n    onPostChange: (text: string)=>void\r\n    userInfo: UserInfoType\r\n    onItemAddClick: ()=>void\r\n    feedPost: FeedPostsType\r\n}\r\n\r\nconst News: React.FC<NewsPropsType> = (props) => {\r\n    return (\r\n        <div className={s.feed}>\r\n            <Stories/>\r\n            <PostTextArea value={props.feedNewPostText}\r\n                          onChangeText={props.onPostChange}\r\n                          user={props.userInfo}\r\n                          addItem={props.onItemAddClick}/>\r\n            {\r\n                props.feedPost.map(t => <Post key={t.id} message={t.message} img={t.src} id={t.id}/>).reverse()\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default News\r\n\r\n","import {addPostAC, profileInputChangeAC, profileReducer} from './profile-reducer';\r\nimport {dialogInputChangeAC, dialogsReducer, fakeDialogsAC, sendMessageAC} from './dialogs-reducer';\r\nimport {addFeedPostAC, feedInputChangeAC, feedReducer} from './feed-reducer';\r\n\r\nexport let firstSrc = 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false';\r\nexport let secondSrc = 'https://static.turbosquid.com/Preview/001325/881/YD/_600.jpg';\r\n/*------STATE TYPE------*/\r\n\r\nexport type UserInfoType = {\r\n    imageSRC: string\r\n    name: string\r\n    surname: string\r\n    eMail: string\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    src: string\r\n    message: string\r\n}\r\nexport type PostsType = Array<PostType>\r\n\r\nexport type DialogType = {\r\n    id: string\r\n    name: string\r\n}\r\nexport type DialogsType = Array<DialogType>\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n    sent: boolean\r\n}\r\nexport type MessagesType = Array<MessageType>\r\n\r\nexport type FeedStoryType = {\r\n    user: {\r\n        name: string\r\n        surname: string\r\n        imageSRC: string\r\n    },\r\n    story: any\r\n}\r\nexport type FeedStoriesType = Array<FeedStoryType>\r\nexport type FeedPostType = {\r\n    id: number\r\n    src: string\r\n    message: string\r\n}\r\nexport type FeedPostsType = Array<FeedPostType>\r\n\r\nexport type ProfilePageType = {\r\n    userInfo: UserInfoType\r\n    post: PostsType\r\n    newPostText: string\r\n}\r\nexport type DialogsPageType = {\r\n    dialogs: DialogsType\r\n    messages: MessagesType\r\n    newMessageText: string\r\n}\r\nexport type NewsPageType = {\r\n    userInfo: UserInfoType\r\n    feedStories: FeedStoriesType\r\n    feedNewPostText: string\r\n    feedPosts: FeedPostsType\r\n}\r\n/*-------main------*/\r\ntype RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n    newsPage: NewsPageType\r\n}\r\n/*------STATE TYPE------*/\r\n\r\n/*------------STORE TYPE------------*/type StoreType = {\r\n    _state: RootStateType\r\n    _callbackSubscriber: (state: RootStateType) => void\r\n    getState: () => RootStateType\r\n    subscribe: (observer: () => void) => void\r\n    dispatch: (action: ActionsType) => void\r\n}\r\n/*------------STORE TYPE------------*/\r\n/*--actions type--*/\r\nexport type ActionsType =\r\n    ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof sendMessageAC>\r\n    | ReturnType<typeof dialogInputChangeAC>\r\n    | ReturnType<typeof profileInputChangeAC>\r\n    | ReturnType<typeof fakeDialogsAC>\r\n    | ReturnType<typeof addFeedPostAC>\r\n    | ReturnType<typeof feedInputChangeAC>\r\n\r\n/*--actions type--*/\r\n/*---------------------------STORE---------------------------*/\r\nconst store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            userInfo: {\r\n                imageSRC: 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n                name: 'Temirtas',\r\n                surname: 'Nursain',\r\n                eMail: 'dalionfull@gmail.com'\r\n            },\r\n            post: [\r\n                {id: 1, src: secondSrc, message: 'That is my wall?'},\r\n\r\n            ],\r\n            newPostText: '',\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {id: '@Tasya', name: 'Tasya'},\r\n                {id: '@Alex', name: 'Alex'},\r\n                {id: '@Fox', name: 'Fox'},\r\n                {id: '@Drill', name: 'Drill'},\r\n                {id: '@Genius', name: 'Genius'},\r\n                {id: '@Uncle', name: 'Uncle'},\r\n                {id: '@GQtpe', name: 'GQtpe'},\r\n                {id: '@Alina', name: 'Alina'},\r\n            ],\r\n            messages: [\r\n                {id: 1, sent: true, message: 'Hi!'},\r\n                {id: 2, sent: false, message: 'Hi!'},\r\n                {id: 3, sent: true, message: 'How do you feel'},\r\n                {id: 4, sent: false, message: 'I feel Incredibly good'},\r\n                {id: 5, sent: true, message: 'Ok, bye'},\r\n                {id: 6, sent: false, message: 'Bye'},\r\n            ],\r\n            newMessageText: ''\r\n        },\r\n        newsPage: {\r\n            userInfo: {\r\n                imageSRC: 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n                name: 'Temirtas',\r\n                surname: 'Nursain',\r\n                eMail: 'dalionfull@gmail.com'\r\n            },\r\n            feedStories: [],\r\n            feedNewPostText: '',\r\n            feedPosts: [\r\n                {id: 1, src: secondSrc, message: 'LALALA'}\r\n            ],\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    _callbackSubscriber(state: RootStateType) {\r\n        console.log(`App rendering... ${state}`)\r\n    },\r\n    subscribe(observer: () => void) {\r\n        this._callbackSubscriber = observer\r\n    },\r\n    dispatch(action) { //{type: string, args..}\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action)\r\n        this._state.newsPage = feedReducer(this._state.newsPage, action)\r\n        this._callbackSubscriber(this._state)\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nconsole.log(store)\r\n/*---------------------------STORE---------------------------*/","import {ActionsType, FeedPostType, firstSrc, NewsPageType, secondSrc} from './state';\r\nlet initialState: NewsPageType = {\r\n    userInfo: {\r\n        imageSRC: 'https://steamuserimages-a.akamaihd.net/ugc/97227892816512942/9D008E4EEFC6BFC6D3E283526BB6276393EA19F4/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n        name: 'Temirtas',\r\n        surname: 'Nursain',\r\n        eMail: 'dalionfull@gmail.com'\r\n    },\r\n    feedStories: [],\r\n    feedNewPostText: '',\r\n    feedPosts: [\r\n        {id: 1, src: secondSrc, message: 'LALALA'}\r\n    ],\r\n}\r\n\r\nexport const feedReducer = (state: NewsPageType =initialState, action: ActionsType) =>{\r\n    if (action.type === 'ADD-FEED-POST') {\r\n        let newFeedPost: FeedPostType = {\r\n            id: state.feedPosts[state.feedPosts.length - 1].id + 1,\r\n            message: state.feedNewPostText,\r\n            src: action.src === 1 ? firstSrc : secondSrc,\r\n        }\r\n        state.feedPosts.push(newFeedPost)\r\n        state.feedNewPostText = ''\r\n\r\n    }\r\n    if (action.type === 'FEED-INPUT-CHANGE') {\r\n        state.feedNewPostText = `${action.text}`\r\n    }\r\n    return state\r\n}\r\nexport const addFeedPostAC = (src: 1 | 2) => {\r\n    return {\r\n        type: 'ADD-FEED-POST',\r\n        src: src\r\n    } as const\r\n\r\n}\r\nexport const feedInputChangeAC = (text: string) => {\r\n    return {\r\n        type: 'FEED-INPUT-CHANGE',\r\n        text: text\r\n    } as const\r\n}","import React from 'react';\r\nimport {ReduxStoreType} from '../../redux/redux-store';\r\nimport News from './News';\r\nimport {addFeedPostAC, feedInputChangeAC} from '../../redux/feed-reducer';\r\n\r\ntype NewsContainerPropsType = {\r\n   store: ReduxStoreType\r\n}\r\n\r\nconst NewsContainer: React.FC<NewsContainerPropsType> = ({store}) => {\r\n    let feedNewPostText = store.getState().newsPage.feedNewPostText\r\n    const onPostChange = (text: string) => store.dispatch(feedInputChangeAC(text))\r\n    let userInfo = store.getState().newsPage.userInfo\r\n    const onItemAddClick = () => store.dispatch(addFeedPostAC(1))\r\n    let feedPost = store.getState().newsPage.feedPosts\r\n\r\n    return <News feedPost={feedPost} onItemAddClick={onItemAddClick} userInfo={userInfo} onPostChange={onPostChange} feedNewPostText={feedNewPostText}/>\r\n}\r\nexport default NewsContainer\r\n\r\n","import React from 'react';\nimport './App.scss';\nimport {Header} from './components/Header/Header';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Music from './components/Music/Music';\nimport Profile from './components/Profile/Profile';\nimport Settings from './components/Settings/Settings';\nimport {ReduxStoreType} from './redux/redux-store';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport NewsContainer from './components/News/NewsContainer';\n\n//types\ntype AppPropsType = {\n    store: ReduxStoreType\n}\n\n\nconst App: React.FC<AppPropsType> = (props) => {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header title={'Social Network'}/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route render={() =><Profile store={props.store}/>} path='/social-network/profile'/>\n\n\n                    <Route render={() => <DialogsContainer store={props.store}/>} path='/social-network/dialogs'/>\n\n\n                    <Route render={() => <NewsContainer store={props.store}/>} path='/social-network/feed'/>\n\n\n                    <Route render={() => <Music/>} path='/social-network/audio'/>\n\n\n\n                    <Route render={() => <Settings/>} path='/social-network/settings'/>\n\n\n\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore } from \"redux\";\r\nimport {profileReducer} from './profile-reducer';\r\nimport {feedReducer} from './feed-reducer';\r\nimport {dialogsReducer} from './dialogs-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    newsPage: feedReducer,\r\n})\r\n\r\nlet store = createStore(reducers);\r\nexport type ReduxStoreType = typeof store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store, {ReduxStoreType} from './redux/redux-store'\n\n\nlet rerenderEntireTree = (store: ReduxStoreType)=>{\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                store={store}\n            />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrerenderEntireTree(store)\nstore.subscribe(()=>{rerenderEntireTree(store)})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}